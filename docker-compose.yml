version: "3.7"
services:
  elasticsearch:
    image: elasticsearch:8.11.3
    ports:
      - 9200:9200
      - 9300:9300
    restart: on-failure
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  jaeger-query:
    image: jaegertracing/jaeger-query:1.52
    ports:
      - 16685:16685
      - 16686:16686
      - 16687:16687
    restart: on-failure
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.52
    ports:
      - 4318:4318
      - 14269:14269
    restart: on-failure
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  postgres:
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - 5433:5432
    volumes:
      - ./db/:/docker-entrypoint-initdb.d/

  api:
    build:
      context: api
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - OTLP_ENDPOINT_URL=http://jaeger-collector:4318/v1/traces
      - Essence__PostgreConnection__ConnectionString=Server=postgres;Port=5432;Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    ports:
      - 5011:5010
    depends_on:
      - postgres
      - jaeger-collector

  app:
    build:
      context: app
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - 90:80
    depends_on:
      - api

